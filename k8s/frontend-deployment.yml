# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
  labels:
    app: frontend-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
      - name: frontend-app
        image: <ACR_NAME>.azurecr.io/frontend-app:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        imagePullSecrets:
          - name: acr-secret

# Frontend Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-app-hpa
  labels:
    app: frontend-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-app
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50  # Scale if CPU utilization is above 50%

# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

# Frontend Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: frontend.example.com  # Replace with your frontend domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80

# We can also use the below load balancer instead of ingress, but its efficient to use ingree in prod environments

# # Frontend Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-app-service
#   labels:
#     app: frontend-app
# spec:
#   type: LoadBalancer  # Exposes frontend publicly
#   selector:
#     app: frontend-app
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
